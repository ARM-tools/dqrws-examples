pro get_dqr_timeranges, datastream=datastream, varname=varname, searchmetric=searchmetric, $ 
                        starttime=starttime, endtime=endtime, nranges=nranges, ascii=ascii, debug=debug
;
;+
; ROUTINE:  get_dqr_timeranges
;
; PURPOSE: Returns arrays of start and end times (time ranges) for which caller could mark varname data as missing.
;          These time range values can be compared to values from an ARM file once base_time and time_offset have been combined.
;          These arrays are either determined by calling the ARM DQR web service or by reading a local data store
;          (perhaps local storage generated by perl front end in a '.anders' subdir).
;          The metric used is decided by the user and can be DQR types: incorrect, suspect or both.
;          program will stop if not able to connect to DQR webservice.
;
;
; KEYWORD INPUT:
;   datastream    valid ARM datastream name as encoded in filenames and DQR database
;   varname       valid ARM varname as stored in files and DQR database
;   searchmetric  either 'incorrect,suspect' or 'incorrect' or 'suspect'
;   ascii         flag to use ascii yyyymmdd.hhmmss method to call webservice. Output is still seconds.
;   debug         flag to print details of web service call to stdout
;
; KEYWORD OUTPUT:
;   starttime     array of start times in seconds since 1970 (arm format) to be used for filtering
;   endtime       array of end times in seconds since 1970 (arm format) to be used for filtering
;   nranges       scalar indicating how many time ranges were found
;
; EXAMPLE:
;   get_dqr_timeranges, datastream='nsamfrsrC2.b1',varname='direct_horizontal_broadband',searchmetric='suspect',starttime=starttime,endtime=endtime
;
; AUTHOR:   Sean Moore, Ken Kehoe, June 2012, sean.moore@arm.gov
; 
; Test to compare ascii time to arm time:
; get_dqr_timeranges,datastream='twpcsphotalmC1.a1',varname='wavelength',searchmetric='incorrect,suspect',starttime=startasciitime,endtime=endasciitime,nranges=nranges,/ascii
; get_dqr_timeranges,datastream='twpcsphotalmC1.a1',varname='wavelength',searchmetric='incorrect,suspect',starttime=starttime,endtime=endtime,nranges=nranges
; print, endasciitime-endtime
;-
if keyword_set(debug) then debug=1 else debug=0
query='datastream='+datastream
query=query+'&varname='+varname
query=query+'&searchmetric='+searchmetric
if keyword_set(ascii) then query=query+'&timeformat=yyyymmdd.hhmmss' else query=query+'&timeformat=armtime'
query=query+'&dqrfields=starttime,endtime'
query=query+'&responsetype=delimited'  

oUrl = OBJ_NEW('IDLnetUrl')
oUrl->SetProperty, VERBOSE = 1, CONNECT_TIMEOUT = 300, TIMEOUT = 300, $
  URL_SCHEME = 'http', URL_HOSTNAME='www.archive.arm.gov', $
  URL_PATH='dqrws/ARMDQR',URL_QUERY=query
  
if (debug) then print, 'Query to DQR webservice: ',query

CATCH, errVal
IF errVal NE 0 THEN BEGIN
  CATCH, /CANCEL
  oUrl->GetProperty, RESPONSE_CODE=response_code,RESPONSE_HEADER=rspHeader
  ;PRINT, 'Response Code = ', response_code
  ;PRINT, 'Response Header = ', rspHeader
  response = ''
  if response_code NE 200 then begin
    PRINT, 'DQR web service Response Code = ', response_code
    PRINT, 'DQR web service Response Header = ', rspHeader  
    PRINT, 'DQR web service Query = ', query 
    stop, 'DQR WEBSERVICE ERROR'
  endif
ENDIF ELSE BEGIN
  response = oUrl->Get(/STRING_ARRAY)
ENDELSE
oUrl->GetProperty, RESPONSE_CODE=response_code

OBJ_DESTROY, oUrl

starttime=[]
endtime=[]
!NULL=STRSPLIT(response,'|',COUNT=count)
IF TOTAL(count) GT 0 THEN BEGIN
  FOR ii=0, N_ELEMENTS(response)-1 DO BEGIN
    rs = STRSPLIT(response[ii],'|',/EXTRACT)
    if keyword_set(ascii) then begin
      utime=asciitime2unixtime(rs[0])
      starttime=[starttime,double(utime)]
      utime=asciitime2unixtime(rs[1])
      endtime=[endtime,double(utime)]     
    endif else begin
      starttime=[starttime,double(rs[0])]
      endtime=[endtime,double(rs[1])]
    endelse
  ENDFOR ; ii
ENDIF ; response 
nranges=n_elements(starttime)
end

